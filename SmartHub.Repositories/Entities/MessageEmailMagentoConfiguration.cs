// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace SmartHub.Repositories.Entities
{

    // MessageEmailMagento
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class MessageEmailMagentoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MessageEmailMagento>
    {
        public MessageEmailMagentoConfiguration()
            : this("dbo")
        {
        }

        public MessageEmailMagentoConfiguration(string schema)
        {
            ToTable(schema + ".MessageEmailMagento");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdEmail).HasColumnName(@"IdEmail").IsRequired().HasColumnType("int");
            Property(x => x.IdMagento).HasColumnName(@"IdMagento").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.MessageEmail).WithMany(b => b.MessageEmailMagentoes).HasForeignKey(c => c.IdEmail).WillCascadeOnDelete(false); // FK_MessageEmailMagento_MessageEmail_IdEmail
            HasRequired(a => a.MessageMagento).WithMany(b => b.MessageEmailMagentoes).HasForeignKey(c => c.IdMagento).WillCascadeOnDelete(false); // FK_MessageEmailMagento_MessageMagento_IdMagento
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
